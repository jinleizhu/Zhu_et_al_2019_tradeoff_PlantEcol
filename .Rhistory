res = 300
)
pchvals <- 1:10
par(
bty = "l",
mfrow = c(3, 2),
mar = c(5, 7, 4, 2) + 0.1,
mgp = c(4, 1, 0),
las = 1,
tck = 0.03
)
# panel a:
plot(
Uref ~ terminal.velocity,
data = dat.ab,
xlim = c(floor(10 * min(
dat.ab$terminal.velocity
)), ceiling(10 * max(
dat.ab$terminal.velocity
))) / 10,
ylim = c(floor(10 * min(dat.ab$Uref)), ceiling(10 * max(dat.ab$Uref))) /
10,
log = "xy",
pch = pchvals[dat.ab$type],
xlab = expression("Terminal velocity " * italic(" V"["t"]) * " (m " * s ^
-1 * ")"),
ylab = expression("Reference velocity " * italic(" U"["ref"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(a)",
cex.main = 2.7,
adj = 0)
# panel b:
plot(
lift.off.velocity ~ vh.ratio,
data = dat.ab,
xlim = c(floor(10 * min(dat.ab$vh.ratio)), ceiling(10 * max(dat.ab$vh.ratio))) /
10,
ylim = c(floor(10 * min(
dat.ab$lift.off.velocity
)), ceiling(10 * max(
dat.ab$lift.off.velocity
))) / 10,
pch = pchvals[dat.ab$type],
# col = cols[surface],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Lift-off velocity " * italic(" U"["lift"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(b)",
cex.main = 2.7,
adj = 0)
# panel c:
plot(
p.b ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(data.morp$p.b)), ceiling(100 * max(data.morp$p.b))) /
100,
log = "xy",
yaxt = "n",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Wind interception parameter " * italic(" p")),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
axis(
2,
at = c(0.3, 0.4, 0.5, 0.6),
labels = as.character(c(0.3, 0.4, 0.5, 0.6)),
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(c)",
cex.main = 2.7,
adj = 0)
# panel d:
plot(
terminal.velocity ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(
data.morp$terminal.velocity
)), ceiling(100 * max(
data.morp$terminal.velocity
))) / 100,
log = "xy",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Terminal velocity " * italic(" V"["t"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(d)",
cex.main = 2.7,
adj = 0)
# panel e:
plot(
wing.loading ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(
data.morp$wing.loading
)), ceiling(100 * max(
data.morp$wing.loading
))) / 100,
log = "xy",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Wing loading (mg " * mm ^ -2 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(e)",
cex.main = 2.7,
adj = 0)
# legend:
plot.new()
legend(
"topleft",
legend = expression(
italic("Zygophyllum xanthoxylon") * " (disc)",
italic("Z. xanthoxylon") * " (" * lambda * "-type)",
italic("Z. xanthoxylon") * " (T-type)",
italic("Z. xanthoxylon") * " (Y-type)",
italic("Z. xanthoxylon") * " (four-winged)",
italic("Calligonum leucocladum") * " (wing)",
italic("C. alaschanicum") * " (bristle)",
italic("C. arborescens") * " (bristle)",
italic("C. klementzii") * " (bristle + wing)",
italic("C. rubicundum") * " (bristle + wing)"
),
bty = "n",
pch = pchvals,
cex = 1.6,
xjust = 0,
y.intersp = 1.1
)
par(opar)
dev.off()
source("./starters/work_env_cleaner.R")
# correlation tests between variables in Fig.4####
source("./starters/figure4_data_preparer.R")
names(data.uref.ulift)
# panel a:####
# between reference velocity and terminal velocity:
y <- subset(data.uref.ulift, surface == "brick")$Uref
x <- subset(data.uref.ulift, surface == "brick")$terminal.velocity
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "sand")$Uref
x <- subset(data.uref.ulift, surface == "sand")$terminal.velocity
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "loam")$Uref
x <- subset(data.uref.ulift, surface == "loam")$terminal.velocity
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "gravel")$Uref
x <- subset(data.uref.ulift, surface == "gravel")$terminal.velocity
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "brick")$lift.off.velocity
x <- subset(data.uref.ulift, surface == "brick")$vh.ratio
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "loam")$lift.off.velocity
x <- subset(data.uref.ulift, surface == "loam")$vh.ratio
cor.test(y, x)
y <- subset(data.uref.ulift, surface == "gravel")$lift.off.velocity
x <- subset(data.uref.ulift, surface == "gravel")$vh.ratio
cor.test(y, x)
# panel c:####
# between wind interception parameter and v-h ratio:
names(data.morp)
x <- data.morp$vh.ratio
# on brick:
y <- data.morp$p.b
cor.test(y, x)
# on sand:
y <- data.morp$p.s
cor.test(y, x)
# on loam:
y <- data.morp$p.l
cor.test(y, x)
# on gravel:
y <- data.morp$p.g
cor.test(y, x)
# panel d:####
# between terminal velocity and v-h ratio:
y <- data.morp$terminal.velocity
x <- data.morp$vh.ratio
cor.test(y, x)
# panel e:####
# between wing loading and v-h ratio:
y <- data.morp$wing.loading
x <- data.morp$vh.ratio
cor.test(y, x)
# This script includes STATISTICAL ANALYSES for primary dispersal.
# ANCOVA FOR PRIMARY DISPERSAL DISTANCE ####
source("./starters/primary_dispersal_data_preparer.R")
source("./starters/work_env_cleaner.R")
# This script includes STATISTICAL ANALYSES for primary dispersal.
# ANCOVA FOR PRIMARY DISPERSAL DISTANCE ####
source("./starters/primary_dispersal_data_preparer.R")
# Models:
# full model:
options(na.action = na.omit)
fit.prim <-
lm(log.dist ~ type * (log.ws + log.rh), data = data.prim)
summary(fit.prim)  # R2 = 0.8096
# test for significance of interaction terms:
drop1(fit.prim, test = "F")
# model checking plots
source("./starters/plot_starter.R")
par(mfrow = c(2, 2))
plot(fit.prim)  # the model checking plots look good
par(opar)
# further simplifications of the model fit.prim, excluding interactions:
fit.prim1 <- lm(log.dist ~ type + log.ws + log.rh, data = data.prim)
summary(fit.prim1)
# The model without interactions between type and release height or wind speed
# has the similar R2 (= 0.7988) (partial R^2 = 0.0108)
anova(fit.prim1, fit.prim)  # significantly different
# dredge function:
options(na.action = na.fail)
dat.tem <- na.omit(data.prim)
fit.prim <- lm(log.dist ~ type * (log.ws + log.rh), data = dat.tem)
fit.prim.dredge <- dredge(fit.prim)
fit.prim.best <- get.models(fit.prim.dredge, 1)[[1]]
summary(fit.prim.best)
drop1(fit.prim.best, test = "F")
# This script includes STATISTICAL ANALYSES for secondary dispersal.
source("./starters/secondary_dispersal_data_preparer.R")
# Two-Way ANOVA FOR SECONDARY DISPERSAL ####
# Models:
# full model:
options(na.action = na.omit)
fit.sec <- lm(log(1 / Uref) ~ type * surface, data = data.sec)
summary(fit.sec)
# test for significance of interaction term:
drop1(fit.sec, test = "F")
# Further simplification, excluding interaction:
fit.sec1 <- lm(log(1 / Uref) ~ type + surface, data = data.sec)
summary(fit.sec1)
# the model without interaction has very similar R2 ( = 0.849)
# (partial R^2 = 0.0512)
anova(fit.sec1, fit.sec)  # significantly different
# use dredge function
options(na.action = na.fail)
fit.sec.dredge <- dredge(fit.sec)
fit.sec.best <- get.models(fit.sec.dredge, 1)[[1]]
summary(fit.sec.best)
drop1(fit.sec.best, test = "F")
# TABLE 1:####
# calculate the mean and SE of aerodynamic characteristics of 10 seed morphologies
# load the function to calculate SE:
source("./starters/analysis_starter.R")
source("./starters/seed_morp_data_preparer.R")
data.morp$type <- factor(data.morp$type,
levels = morph.levels.new)
disptraits.mean <-
aggregate(data.morp[, c(2:9)], by = list(type = data.morp$type), mean)
disptraits.se <-
aggregate(data.morp[, c(2:9)], by = list(type = data.morp$type), se)
disptraits.mean
disptraits.se
disptraits.mean
# 1                     disc 24.23950 20.51300  3.40050 0.0578500 3.7708650    0.1553196          1.357476 0.1523274
# 2                   y-type 25.62250 21.47100  9.08500 0.0707500 4.3276400    0.1634725          1.319015 0.3862666
# 3                   T-type 28.66250 23.19625 14.95425 0.1031250 5.4051400    0.1911503          1.386166 0.5777891
# 4                   Y-type 29.47700 23.13675 18.98050 0.1343750 5.5408525    0.2448354          1.481893 0.7277679
# 5              four-winged 25.16275 18.80950 14.87175 0.1067750 3.7427700    0.2863131          1.567095 0.6776750
# 6   Calligonum arborescens 23.08675 19.12650 18.94625 0.1267250 2.2051475    0.5731619          2.091820 0.8983753
# 7  Calligonum alaschanicum 14.19850 13.37375 13.04600 0.0418100 0.9001225    0.4668870          2.054648 0.9475447
# 8    Calligonum klementzii 22.35825 21.36425 21.18950 0.0884750 1.3309700    0.6749695          1.855976 0.9719399
# 9    Calligonum rubicundum 19.80500 17.51050 15.98025 0.1281500 2.2068650    0.5942120          1.990332 0.8570174
# 10  Calligonum leucocladum 15.12575 12.21125 10.88325 0.0530775 1.4723525    0.3634035          1.734574 0.7977044
disptraits.se
# 1                     disc 24.23950 20.51300  3.40050 0.0578500 3.7708650    0.1553196          1.357476 0.1523274
# 2                   y-type 25.62250 21.47100  9.08500 0.0707500 4.3276400    0.1634725          1.319015 0.3862666
# 3                   T-type 28.66250 23.19625 14.95425 0.1031250 5.4051400    0.1911503          1.386166 0.5777891
# 4                   Y-type 29.47700 23.13675 18.98050 0.1343750 5.5408525    0.2448354          1.481893 0.7277679
# 5              four-winged 25.16275 18.80950 14.87175 0.1067750 3.7427700    0.2863131          1.567095 0.6776750
# 6   Calligonum arborescens 23.08675 19.12650 18.94625 0.1267250 2.2051475    0.5731619          2.091820 0.8983753
# 7  Calligonum alaschanicum 14.19850 13.37375 13.04600 0.0418100 0.9001225    0.4668870          2.054648 0.9475447
# 8    Calligonum klementzii 22.35825 21.36425 21.18950 0.0884750 1.3309700    0.6749695          1.855976 0.9719399
# 9    Calligonum rubicundum 19.80500 17.51050 15.98025 0.1281500 2.2068650    0.5942120          1.990332 0.8570174
# 10  Calligonum leucocladum 15.12575 12.21125 10.88325 0.0530775 1.4723525    0.3634035          1.734574 0.7977044
disptraits.se
# This script plots the correlations between various factors only on brick surface ####
source("./starters/plot_starter.R")
source("./starters/figure4_data_preparer.R")
png(
filename = "./plots/Figure4.png",
width = 8,
height = 12,
units = "in",
res = 300
)
pchvals <- 1:10
par(
bty = "l",
mfrow = c(3, 2),
mar = c(5, 7, 4, 2) + 0.1,
mgp = c(4, 1, 0),
las = 1,
tck = 0.03
)
# panel a:
plot(
Uref ~ terminal.velocity,
data = dat.ab,
xlim = c(floor(10 * min(
dat.ab$terminal.velocity
)), ceiling(10 * max(
dat.ab$terminal.velocity
))) / 10,
ylim = c(floor(10 * min(dat.ab$Uref)), ceiling(10 * max(dat.ab$Uref))) /
10,
log = "xy",
pch = pchvals[dat.ab$type],
xlab = expression("Terminal velocity " * italic(" V"["t"]) * " (m " * s ^
-1 * ")"),
ylab = expression("Reference velocity " * italic(" U"["ref"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(a)",
cex.main = 2.7,
adj = 0)
# panel b:
plot(
lift.off.velocity ~ vh.ratio,
data = dat.ab,
xlim = c(floor(10 * min(dat.ab$vh.ratio)), ceiling(10 * max(dat.ab$vh.ratio))) /
10,
ylim = c(floor(10 * min(
dat.ab$lift.off.velocity
)), ceiling(10 * max(
dat.ab$lift.off.velocity
))) / 10,
pch = pchvals[dat.ab$type],
# col = cols[surface],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Lift-off velocity " * italic(" U"["lift"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(b)",
cex.main = 2.7,
adj = 0)
# panel c:
plot(
p.b ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(data.morp$p.b)), ceiling(100 * max(data.morp$p.b))) /
100,
log = "xy",
yaxt = "n",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Wind interception parameter " * italic(" p")),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
axis(
2,
at = c(0.3, 0.4, 0.5, 0.6),
labels = as.character(c(0.3, 0.4, 0.5, 0.6)),
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(c)",
cex.main = 2.7,
adj = 0)
# panel d:
plot(
terminal.velocity ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(
data.morp$terminal.velocity
)), ceiling(100 * max(
data.morp$terminal.velocity
))) / 100,
log = "xy",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Terminal velocity " * italic(" V"["t"]) * " (m " * s ^
-1 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(d)",
cex.main = 2.7,
adj = 0)
# panel e:
plot(
wing.loading ~ vh.ratio,
data = data.morp,
xlim = c(floor(10 * min(data.morp$vh.ratio)), ceiling(10 * max(data.morp$vh.ratio))) /
10,
ylim = c(floor(100 * min(
data.morp$wing.loading
)), ceiling(100 * max(
data.morp$wing.loading
))) / 100,
log = "xy",
pch = pchvals[data.morp$type],
xlab = expression(italic("v/h") * "-ratio"),
ylab = expression("Wing loading (mg " * mm ^ -2 * ")"),
cex = 2.1,
cex.axis = 2.1,
cex.lab = 2.1
)
title(main = "(e)",
cex.main = 2.7,
adj = 0)
# legend:
plot.new()
legend(
"topleft",
legend = expression(
italic("Zygophyllum xanthoxylon") * " (disc)",
italic("Z. xanthoxylon") * " (" * lambda * "-type)",
italic("Z. xanthoxylon") * " (T-type)",
italic("Z. xanthoxylon") * " (Y-type)",
italic("Z. xanthoxylon") * " (four-winged)",
italic("Calligonum leucocladum") * " (wing)",
italic("C. alaschanicum") * " (bristle)",
italic("C. arborescens") * " (bristle)",
italic("C. klementzii") * " (bristle + wing)",
italic("C. rubicundum") * " (bristle + wing)"
),
bty = "n",
pch = pchvals,
cex = 1.6,
xjust = 0,
y.intersp = 1.1
)
par(opar)
dev.off()
source("./starters/work_env_cleaner.R")
# APPENDIX ####
source("./starters/plot_starter.R")
## Fig. A1:
png(filename = "./plots/Fig.A1.png", width = 14, height = 7, units = "in", res = 300, bg = "white")
par(mar = c(0, 0, 0, 0) + 0.1)
layout(matrix(1:2, 1, 2, byrow = T))
# panel d of Fig. A1:
plot(1:20, type = "n", xlim = c(0, 20), ylim = c(3, 19), xlab = "", ylab = "", axes = FALSE)
segments(rep(0, 2), c(5, 15), rep(20, 2), c(5, 15), col = "black", lwd = 2)
arrows(0, 7, x1 = 2, angle = 30, lwd = 2)
arrows(0, 13, x1 = 2, angle = 30, lwd = 2, col = "black")
text(0, 10, "Horizontal wind", adj = 0, cex = 2, col = "black")
segments(9, 18, y1 = 10, col = "black", lwd = 2)
segments(9, 10, x1 = 8.8, col = "black")
text(9, 18, "Pitot tube", pos = 2, cex = 2, col = "black")
segments(11, 17, y1 = 9, col = "black", lwd = 2)
segments(11.1, 17, y1 = 9, col = "black", lwd = 2)
text(11.1, 17, "Release tube", pos = 4, cex = 2)
arrows(11.5, 5, y1 = 9, length = 0.1, angle = 90, code = 3, col = "black", lwd = 2)
arrows(11.5, 5, y1 = 9, length = 0.1, angle = 30, code = 3, col = "black", lwd = 2)
text(11.5, 7, "Release height", pos = 2, cex = 2)
myfunc <- function(x) {
y <- - 4 * x^2 / 49 + 88 * x / 49 - 43 / 49
return(y)
}
curve(myfunc, 11, 18, n = 200, add = T, col = "black")
arrows(11, 4.5, x1 = 18, length = 0.1, angle = 90, code = 3, col = "black", lwd = 2)
arrows(11, 4.5, x1 = 18, length = 0.1, angle = 30, code = 3, col = "black", lwd = 2)
text(13, 4.5, "Primary dispersal distance", pos = 1, cex = 2, col = "black")
text(0, 18, "(D)", pos = 4, cex = 2)
# panel e of Fig. A1:
plot(1:20, type = "n", xlim = c(0, 20), ylim = c(3, 19), xlab = "", ylab = "", axes = FALSE)
segments(rep(0, 2), c(5, 15), rep(20, 2), c(5, 15), col = "black", lwd = 2)
arrows(0, 7, x1 = 2, angle = 30, col = "black", lwd = 2)
arrows(0, 13, x1 = 2, angle = 30, col = "black", lwd = 2)
text(0, 10, "Horizontal wind", adj = 0, col = "black", cex = 2)
segments(9, 18, y1 = 10, col = "black", lwd = 2)
segments(9, 10, x1 = 8.8, col = "black", lwd = 2)
text(9, 18, "Pitot tube", pos = 2, col = "black", cex = 2)
points(10, 5.2, pty = 16, col = "black", cex = 2)
circle <- function(x) {
y <- 5.2 + sqrt(0.09 - (x - 10)^2)
return(y)
}
curve(circle, 9.71, 10, n = 200, add = TRUE, col = "black")
arrows(10, 5.5, x1 = 10.1, angle = 30, length = 0.1, col = "black", lwd = 2)
text(10, 5.6, "Seed", pos = 3, col = "black", cex = 2)
text(0, 18, "(E)", pos = 4, cex = 2)
par(opar)
dev.off()
